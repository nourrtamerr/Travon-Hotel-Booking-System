@model MVCBookingFinal_YARAB_.ViewModels.ReservationViewModel
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Microsoft.EntityFrameworkCore
@using System.Text.Json
@using System.Reflection
@using System.ComponentModel.DataAnnotations

@inject ApplicationDbContext context;
@{



    ViewData["Title"] = "Reserve";
    var flag = false;
    // var list= context.MealPlans.Include(m => m.plan).Select(m => new { m.Id, PlanText = m.plan.ToString() });
    // var sl = new SelectList( ,"Id", "PlanText", Model.Plan);
    if (Model is not null)
    {
        flag = true;

    }



    


    Hotel hotel = ViewBag.MyHotel;
    var Amenityselectlist = Enum.GetValues(typeof(AmenityEnum))
                   .Cast<AmenityEnum>()
                   // .Where(a => a != AmenityEnum.WiFi && hotel.Ameneties.Amenities.HasFlag(a))
                   .Where(a =>  hotel?.Ameneties?.Amenities != null && hotel.Ameneties.Amenities.HasFlag(a))
                   .Select(a => new SelectListItem
                           {
                               Value = ((int)a).ToString(),  // Enum integer value
                               Text = GetDisplayName(a),        // Enum string name
                               // Selected = (((AmenityEnum)Model.amenity) == null) ? false : ((AmenityEnum)Model.amenity).HasFlag(a)
                               Selected = (Model.amenity != null && ((AmenityEnum)Model.amenity).HasFlag(a))  // Ensure Model.amenity is not null before checking HasFlag

                           })
                   .ToList();
    int x = 5;


    string GetDisplayName(Enum enumValue)
    {
        var field = enumValue.GetType().GetField(enumValue.ToString());
        var displayAttr = field?.GetCustomAttribute<DisplayAttribute>();
        return displayAttr?.Name ?? enumValue.ToString();
    }
}
@{
    var options = new JsonSerializerOptions
            {
                ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve
            };
}

<style>
    .hotel-badge {
        font-size: 14px;
        padding: 5px 10px;
        border-radius: 5px;
        background: #ffcc00;
        color: black;
    }

    .custom-btn-group .btn {
        background-color: white;
        color: #1a374d;
        border-color: #1a374d;
    }

        .custom-btn-group .btn:hover {
            background-color: #f0f0f0;
            color: #1a374d;
        }

    .custom-btn-group .btn-check:checked + .btn {
        background-color: #1a374d;
        color: white;
        border-color: #1a374d;
    }


    .draft-message {
        background: #e3f6fc; /* Soft blue, matches your sidebar theme */
        color: #1A374D; /* Your main theme color */
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(26, 55, 77, 0.06);
        padding: 1.5rem 2rem;
        margin: 2rem auto 0 auto;
        max-width: 600px;
        text-align: center;
        font-size: 1.15rem;
        font-weight: 500;
        letter-spacing: 0.02em;
        border: 1px solid #b6e0f7;
    }


</style>



<div class="container-fluid">
    <div class="row">
       

            @if (ViewBag.DraftMessage != null)
            {
            <div class="col-md-3">
                @await Html.PartialAsync("_ProfileSidebar", Model)
            </div>


            <div class="col-md-9">

                <div class="draft-message" >
                    @ViewBag.DraftMessage
                </div>
            </div>

               
            }

            else
            {
                <div class="container mt-4">
                    <!-- Hotel Title Section -->
                    <div class="text-center mb-4">
                        <div class="d-flex justify-content-center">
                            <h2 class="fw-bold pe-2">@hotel.Name</h2>
                            @for (int i = 0; i < hotel.starRating; i++)
                            {
                                <i class="fa-solid fa-star" style="color: gold;"></i>
                            }
                        </div>

                        <span class="hotel-badge">Beachfront · Private beach</span>
                        <span class="hotel-badge">Airport shuttle</span>
                        <p class="text-muted mt-1">@hotel.Address</p>
                    </div>

                    <!-- Reservation Form -->
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="card shadow-sm p-4" style="border-radius: 15px;">
                                <h4 class="fw-bold mb-3 text-center" style="font-family: 'Arial', sans-serif;">Your booking details</h4>

                                <form asp-action="Reserve">
                                    <div asp-validation-summary="All" class="text-danger"></div>
                                    <input asp-for="rooms" hidden />
                                    <!-- Date Selection -->
                                    <div class="mb-3">
                                        <label class="fw-bold" asp-for="CheckInDate">Check-in</label>
                                        <input asp-for="CheckInDate" class="form-control" type="date" />
                                        <span asp-validation-for="CheckInDate" class="text-danger"></span>
                                    </div>
                                    <div class="mb-3">
                                        <label class="fw-bold" asp-for="CheckOutDate">Check-out</label>
                                        <input asp-for="CheckOutDate" class="form-control" type="date" />
                                        <span asp-validation-for="CheckOutDate" class="text-danger"></span>
                                    </div>

                                    <!-- Meal Plan Selection as Button Group -->
                                    <div class="mb-3">
                                        <label class="fw-bold">Meal Plan</label>
                                        <div class="btn-group w-100 custom-btn-group" role="group">
                                            @foreach (var value in Enum.GetValues(typeof(mealPlan)))
                                            {
                                                var meal = (mealPlan)value;
                                                <input type="radio" class="btn-check" asp-for="Plan" id="@meal" value="@meal">
                                            <label class="btn " for="@meal">@GetDisplayName(meal)</label>
                                            }
                                        </div>
                                    </div>



                                    <!-- Promo Code Input -->
                                    <div class="mb-3">
                                        <label class="fw-bold" asp-for="PromoCode">Promo Code</label>
                                        <input asp-for="PromoCode" class="form-control" placeholder="Enter code" />
                                        <span asp-validation-for="PromoCode" class="text-danger"></span>
                                    </div>

                                    <!-- Buttons -->
                                    <div class="d-flex justify-content-center gap-2">
                                        <button type="submit" formaction="/Home/Index" class="btn btn-secondary w-50" style="border-radius: 10px;">
                                            <i class="fa-solid fa-save"></i> Save as Draft
                                        </button>
                                        <button type="submit" formaction="/Reservation/ConfirmReserve" class="btn w-50" style="border-radius: 10px; background-color: #1a374d; color: white;">
                                            <i class="fa-solid fa-check"></i> Proceed to Payment
                                        </button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            }



        
    </div>
</div>










<div>
    @* <a asp-action="Index">Back to List</a> *@
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("reservationForm");
        const saveDraftButton = document.getElementById("saveDraftButton");

        // Function to trigger "Save to draft"
        function saveDraft() {
            saveDraftButton.click();
        }

        // Listen for changes on all form inputs, selects, and textareas
        form.querySelectorAll("input, select, textarea").forEach((element) => {
            element.addEventListener("change", saveDraft); // When value changes
            element.addEventListener("blur", saveDraft); // When user leaves field
        });
    });
</script>